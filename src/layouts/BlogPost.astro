---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Navbar from "../components/Navbar.astro";
import StayConnected from "../components/StayConnected.astro";
import Favicon from "./Favicon.astro";
import ThemeScript from "./ThemeScript.astro";
import CalendarDaysIcon from "../components/svg/CalendarDaysIcon.astro";
import ArrowPath from "../components/svg/ArrowPath.astro";
import { TAGS } from "../consts";

type Props = CollectionEntry<"blog">["data"] & {
  lastModified: string;
};

const { title, description, pubDate, lastModified, thumbnail, tags } = Astro.props;
---

<html class="theme" lang="en">
  <head>
    <Favicon />
    <ThemeScript />
    <BaseHead title={title} description={description} thumbnailUrl={thumbnail.url} slot="meta" />
  </head>

  <body>
    <Navbar />
    <main id="main" class="py-20">
      <div class="mx-auto min-h-screen max-w-3xl px-6 sm:px-8">
        <article class="blog-post prose prose-theme max-w-none prose-img:mx-auto">
          <h1 class="m-0 mb-4">{title}</h1>
          <div class="space-y-1 text-sm">
            <div class="flex items-center gap-1">
              <CalendarDaysIcon width="20" height="20" />
              <span>Published:</span>
              <FormattedDate date={pubDate} />
            </div>
            <div class="flex items-center gap-1">
              <ArrowPath width="20" height="20" />
              <span>Last updated:</span>
              <FormattedDate date={new Date(lastModified)} />
            </div>
          </div>
          <ul class="unset not-prose mt-4 flex list-none flex-wrap gap-x-2 gap-y-1">
            {
              tags.map((tag) => (
                <li>
                  <a
                    href={`/blog/tags/${tag}/`}
                    aria-label={`See all posts tagged with ${TAGS[tag].label ?? tag}`}
                    class="unset rounded-full border border-primary-main px-4 py-1 text-xs font-bold transition hover:bg-primary-main hover:text-white">
                    {TAGS[tag].label ?? tag}
                  </a>
                </li>
              ))
            }
          </ul>
          <figure class="mb-16">
            <img
              src={thumbnail.url}
              width="748"
              height="392"
              alt={thumbnail.alt}
              class="rounded-md object-cover"
            />
            {
              thumbnail.creditText && (
                <figcaption class="mt-1.5 text-center text-xs">
                  {thumbnail.creditLink ? (
                    <a
                      href={thumbnail.creditLink}
                      target="_blank"
                      rel="noreferrer"
                      class="unset not-prose underline">
                      {thumbnail.creditText}
                    </a>
                  ) : (
                    thumbnail.creditText
                  )}
                </figcaption>
              )
            }
          </figure>
          <slot name="content" />
        </article>
        <StayConnected className="mt-16 px-6 sm:px-8" />
      </div>
    </main>
    <Footer />
  </body>
</html>
