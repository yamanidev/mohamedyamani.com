---
import { type CollectionEntry, getCollection } from "astro:content";
import CustomLink from "../../components/CustomLink.astro";
import BlogPost from "../../layouts/BlogPost.astro";

type Props = CollectionEntry<"blog">;

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
const post = Astro.props;
const { Content, remarkPluginFrontmatter } = await post.render();

const currentIndex = posts
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .findIndex((p) => p.slug === post.slug);

const previousPost = posts[currentIndex + 1] || null;
const nextPost = posts[currentIndex - 1] || null;

const lastModified = remarkPluginFrontmatter.lastModified;
---

<BlogPost
  {...post.data}
  lastModified={lastModified}
  nextPost={nextPost}
  previousPost={previousPost}>
  <Content slot="content" components={{ a: CustomLink }} />
</BlogPost>
